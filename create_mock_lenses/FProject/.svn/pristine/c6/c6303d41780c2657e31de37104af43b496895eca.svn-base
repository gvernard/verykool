<?php
error_reporting(E_ALL);
ini_set('display_errors','1');
include("/Users/users/gvernard/myLibraries/myInc/db_conns.inc.php");


function randomFloat($min,$max) {
    return $min + ($max-$min)*mt_rand()/mt_getrandmax();
}



$conn     = argoDB();
$path2dir = "/net/argo/data/users/gvernard/DATABASES/mock_lenses_db/";



$l_model = 'sie_g';
$s_model = 'sersic';
$s_ieff  = 1.;

for($i=0;$i<10000;$i++){
    //random parameters for the lens
    $l_b    = round(randomFloat(0.8,5.),3);
    $l_q    = round(randomFloat(0.5,0.999),3);
    $l_pa   = mt_rand(0,180);
    $l_g    = round(randomFloat(0.0,0.05),3);
    $l_g_pa = mt_rand(0,180);

    //random parameters for the source
    $s_n    = round(randomFloat(0.5,3.),1);
    $s_reff = round(randomFloat(0.2,0.6),3);
    $s_q    = round(randomFloat(0.3,1.),3);
    $s_pa   = mt_rand(0,180);




    //Insert into database and get unique ID
    $qstr = "INSERT INTO mock_lenses (`l_model`,`l_b`,`l_q`,`l_pa`,`l_g`,`l_g_pa`,`s_model`,`s_n`,`s_ieff`,`s_reff`,`s_q`,`s_pa`) VALUES ('$l_model',$l_b,$l_q,$l_pa,$l_g,$l_g_pa,'$s_model',$s_n,$s_ieff,$s_reff,$s_q,$s_pa)";
    mysqli_query($conn,$qstr);

    $result = mysqli_query($conn,'SELECT LAST_INSERT_ID()');
    $row = mysqli_fetch_array($result);
    $id = str_pad($row[0],7,'0',STR_PAD_LEFT);
    //    echo $id . "\n";
    $path = $path2dir . $id . "/";
    mkdir($path);




    //Create input for FProject
    //(needs database ID for output directory)
    $jarr = array();
    $jarr["output"]    = $path;
    $jarr["iplane"]    = array("pix_x"=>200,"pix_y"=>200,"siz_x"=>20.,"siz_y"=>20.);
    $jarr["triangles"] = array("Nx"=>50,"Ny"=>50,"sel_radius"=>0.05);
    $jarr["sources"]   = array();
    $jarr["sources"][0] = array("type"=>$s_model,"randomize"=>1,"x0"=>0,"y0"=>0,"pa"=>$s_pa,"q"=>$s_q,"reff"=>$s_reff,"ieff"=>$s_ieff,"index"=>$s_n);
    //The following nlpars are specifically for sie_g lenses
    $jarr["mmodel"]    = $l_model;
    $jarr["nlpars"]    = array();
	$jarr["nlpars"][0] = array("name"=>"b","value"=>$l_b);
	$jarr["nlpars"][1] = array("name"=>"q","value"=>$l_q);
	$jarr["nlpars"][2] = array("name"=>"pa","value"=>$l_pa);
	$jarr["nlpars"][3] = array("name"=>"xl","value"=>0.);
	$jarr["nlpars"][4] = array("name"=>"yl","value"=>0.);
	$jarr["nlpars"][5] = array("name"=>"g","value"=>$l_g);
	$jarr["nlpars"][6] = array("name"=>"phi","value"=>$l_g_pa);
    //    $fh = fopen($path2dir . $id . "/test",'w');
    //    fwrite($fh,json_encode($jarr,JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));
    //    fwrite($fh,json_encode($jarr,JSON_UNESCAPED_SLASHES));
    //    fclose($fh);




    //Run FProject, pass input and get output
    $descr = array(0=>array('pipe','r'),1=>array('pipe','w'),2=>array('pipe','w'));
    $pipes = array();
    $process = proc_open("/Users/users/gvernard/myCodes/FProject/fproject",$descr,$pipes);
    if( is_resource($process) ){
        fputs($pipes[0],json_encode($jarr,JSON_UNESCAPED_SLASHES));
        fclose($pipes[0]);
        $out = stream_get_contents($pipes[1]);
        fclose($pipes[1]);
        proc_close($process);
    }
    


    //Update database from FProject output
    //(source center coodinates, and classification)
    preg_match('/{[^\]]+}/',$out,$match);
    $json = json_decode($match[0]);
    $qstr = "UPDATE mock_lenses SET class='" . $json->{"class"} . "',s_x0=" . round($json->{"x0"},3) . ",s_y0=" . round($json->{"y0"},3) . " WHERE id=$id";
    mysqli_query($conn,$qstr);
}


destroyDB();





?>

